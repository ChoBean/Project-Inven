<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/inven?serverTimezone=UTC" />
		<property name="user" value="run" />
		<property name="password" value="1234" />
		<property name="maxPoolSize" value="100" />
		<property name="maxIdleTime" value="600" />
		<property name="idleConnectionTestPeriod" value="300" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:config/sqlmap-board.xml</value>
				<value>classpath*:config/sqlmap-user.xml</value>
				<value>classpath*:config/sqlmap-character.xml</value>
				<value>classpath*:config/sqlmap-kart.xml</value>
				<value>classpath*:config/sqlmap-mapinfo.xml</value>
			</list>
		</property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg ref="sqlSessionFactory"/>
		<!-- property -> setter를 이용 -->
		<!-- constructor-arg -> 생성자를 이용 -->
	</bean>
	
	<bean id="boardDao" class="board.dao.BoardDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="boardService" class="board.service.BoardServiceImpl">
		<property name="boardDao" ref="boardDao"/>
	</bean>
	
	<bean id="fileUploadService" class="board.service.FileUploadServiceImpl">
	
	</bean>
	
	<bean id="userDao" class="board.dao.UserDao">
		<constructor-arg ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="userService" class="board.service.UserServiceImpl">
		<property name="userDao" ref="userDao"/>
	</bean>
	
	<bean id="characterDao" class="board.dao.CharacterDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="characterService" class="board.service.CharacterServiceImpl">
		<property name="characterDao" ref="characterDao" />
	</bean>
	
	<bean id="kartDao" class="board.dao.KartDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="kartService" class="board.service.KartServiceImpl">
		<property name="kartDao" ref="kartDao"/>
	</bean>
	
	<bean id="mapInfoDao" class="board.dao.MapInfoDaoImpl">
		<constructor-arg ref="sqlSessionTemplate"/>
	</bean>	
	
	<bean id="mapInfoService" class="board.service.MapInfoServiceImpl">
		<property name="mapInfoDao" ref="mapInfoDao"/>
	</bean>
</beans>
